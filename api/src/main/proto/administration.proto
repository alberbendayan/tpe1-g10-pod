syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "common.proto";

package administrationService;

option java_package = "ar.edu.itba.pod.grpc.administrationService";
option java_outer_classname = "AdministrationServiceModel";
option java_multiple_files = true;

service AdministrationService{
  rpc AddRoom(google.protobuf.Empty) returns (Room);
  rpc AddDoctor(common.Doctor) returns (common.Doctor);
  rpc ChangeDoctorAvailability(common.RequestDoctor) returns (common.Doctor);
  rpc GetDoctorAvailability(google.protobuf.StringValue) returns (common.Doctor);
}

// Si el ID es negativo, hubo error
message Room {
  int32 id = 1;
  bool isEmpty = 2;
}
/*
 * Si cdo devolvemos el level es -1 es xq el level es invalido,
 * si es -2 xq el dr ya existe
 * si es -3 xq la disponibilidad esta mal (esta atendiendo y lo quiero ocupar)
 */