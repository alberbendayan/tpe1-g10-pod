syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "common.proto";

package waitingRoomService;

option java_package = "ar.edu.itba.pod.waitingRoomService";
option java_outer_classname = "WaitingRoomServiceModel";
option java_multiple_files = true;

service WaitingRoomService{
  rpc AddPatient(RequestPatient) returns (Patient);
  rpc ChangePatientLevel(RequestPatient) returns (Patient);
  rpc WaitingTime(google.protobuf.StringValue) returns (PatientTime);
}

/*
 * Si cdo devolvemos el level es -1 es xq el level es invalido,
 * si es -2 xq el name ya existe
 * el state es como un enum q si es 1 esta esperando, 2 esta siendo atendido y 3 si ya acabo la consulta
 */
message Patient {
  string name = 1;
  int32 level = 2;
  int32 state = 3;
}

message RequestPatient {
  string name = 1;
  int32 level = 2;
}

message RequestDoctor{
  string name = 1;
  bool availability = 2;
}

message PatientTime {
  string name = 1;
  int32 level = 2;
  int32 state = 3;
  int32 patientsahead = 4;
}
